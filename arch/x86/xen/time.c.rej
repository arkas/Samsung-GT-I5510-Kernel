--- arch/x86/xen/time.c
+++ arch/x86/xen/time.c
@@ -100,7 +100,7 @@
 	return per_cpu(runstate, vcpu).state == RUNSTATE_runnable;
 }
 
-void xen_setup_runstate_info(int cpu)
+static void setup_runstate_info(int cpu)
 {
 	struct vcpu_register_runstate_memory_area area;
 
@@ -434,7 +434,7 @@
 		name = "<timer kasprintf failed>";
 
 	irq = bind_virq_to_irqhandler(VIRQ_TIMER, cpu, xen_timer_interrupt,
-				      IRQF_DISABLED|IRQF_PERCPU|IRQF_NOBALANCING|IRQF_TIMER,
+				      IRQF_DISABLED|IRQF_PERCPU|IRQF_NOBALANCING,
 				      name, NULL);
 
 	evt = &per_cpu(xen_clock_events, cpu);
@@ -442,6 +442,8 @@
 
 	evt->cpumask = cpumask_of(cpu);
 	evt->irq = irq;
+
+	setup_runstate_info(cpu);
 }
 
 void xen_teardown_timer(int cpu)
@@ -492,7 +494,6 @@
 
 	setup_force_cpu_cap(X86_FEATURE_TSC);
 
-	xen_setup_runstate_info(cpu);
 	xen_setup_timer(cpu);
 	xen_setup_cpu_clockevents();
 }

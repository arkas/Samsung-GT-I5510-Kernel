--- arch/x86/kernel/ptrace.c
+++ arch/x86/kernel/ptrace.c
@@ -408,14 +408,14 @@
 {
 	if (kbuf) {
 		unsigned long *k = kbuf;
-		while (count >= sizeof(*k)) {
+		while (count > 0) {
 			*k++ = getreg(target, pos);
 			count -= sizeof(*k);
 			pos += sizeof(*k);
 		}
 	} else {
 		unsigned long __user *u = ubuf;
-		while (count >= sizeof(*u)) {
+		while (count > 0) {
 			if (__put_user(getreg(target, pos), u++))
 				return -EFAULT;
 			count -= sizeof(*u);
@@ -434,14 +434,14 @@
 	int ret = 0;
 	if (kbuf) {
 		const unsigned long *k = kbuf;
-		while (count >= sizeof(*k) && !ret) {
+		while (count > 0 && !ret) {
 			ret = putreg(target, pos, *k++);
 			count -= sizeof(*k);
 			pos += sizeof(*k);
 		}
 	} else {
 		const unsigned long  __user *u = ubuf;
-		while (count >= sizeof(*u) && !ret) {
+		while (count > 0 && !ret) {
 			unsigned long word;
 			ret = __get_user(word, u++);
 			if (ret)
@@ -1219,14 +1219,14 @@
 {
 	if (kbuf) {
 		compat_ulong_t *k = kbuf;
-		while (count >= sizeof(*k)) {
+		while (count > 0) {
 			getreg32(target, pos, k++);
 			count -= sizeof(*k);
 			pos += sizeof(*k);
 		}
 	} else {
 		compat_ulong_t __user *u = ubuf;
-		while (count >= sizeof(*u)) {
+		while (count > 0) {
 			compat_ulong_t word;
 			getreg32(target, pos, &word);
 			if (__put_user(word, u++))
@@ -1247,14 +1247,14 @@
 	int ret = 0;
 	if (kbuf) {
 		const compat_ulong_t *k = kbuf;
-		while (count >= sizeof(*k) && !ret) {
+		while (count > 0 && !ret) {
 			ret = putreg32(target, pos, *k++);
 			count -= sizeof(*k);
 			pos += sizeof(*k);
 		}
 	} else {
 		const compat_ulong_t __user *u = ubuf;
-		while (count >= sizeof(*u) && !ret) {
+		while (count > 0 && !ret) {
 			compat_ulong_t word;
 			ret = __get_user(word, u++);
 			if (ret)
